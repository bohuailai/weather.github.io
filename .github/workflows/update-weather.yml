name: Update Weather Data

on:
  schedule:
    - cron: '*/10 * * * *'  # 每10分鐘執行一次
  workflow_dispatch:  # 允許手動觸發
  push:  # 添加 push 觸發器

jobs:
  update-weather:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Fetch weather data
      run: |
        echo "開始獲取天氣數據..."
        echo "檢查 API 密鑰是否存在..."
        if [ -z "$OPENWEATHER_API_KEY" ]; then
          echo "錯誤：API 密鑰未設置"
          exit 1
        fi
        echo "API 密鑰已設置"
        
        python -c '
        from app import get_weather
        import json
        import os

        print("Python 腳本開始執行...")
        print(f"API 密鑰長度: {len(os.getenv("OPENWEATHER_API_KEY"))}")

        try:
            print("嘗試獲取台北天氣...")
            result = get_weather("Taipei")
            print("天氣數據獲取成功：")
            print(json.dumps(result.json, indent=2, ensure_ascii=False))
            
            print("正在保存數據到文件...")
            with open("weather_data.json", "w", encoding="utf-8") as f:
                json.dump(result.json, f, ensure_ascii=False, indent=2)
            print("數據保存成功")
                
        except Exception as e:
            print(f"錯誤詳情：{str(e)}")
            print(f"錯誤類型：{type(e).__name__}")
            import traceback
            print("完整錯誤追蹤：")
            print(traceback.format_exc())
            exit(1)
        '
        echo "檢查生成的文件："
        ls -l weather_data.json || true
        cat weather_data.json || true
      env:
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        
    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add weather_data.json
        
        # 檢查是否有變更需要提交
        if git diff --staged --quiet; then
          echo "沒有新的變更需要提交"
        else
          git commit -m "自動更新天氣數據 $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 